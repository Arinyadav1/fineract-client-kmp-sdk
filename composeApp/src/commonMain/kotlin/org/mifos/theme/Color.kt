/*
 * Copyright 2025 Mifos Initiative
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 *
 * See See https://github.com/openMF/kmp-project-template/blob/main/LICENSE
 */
package org.mifos.theme
import androidx.compose.ui.graphics.Color

val primaryLight = Color(0xFF610049)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFF880368)
val onPrimaryContainerLight = Color(0xFFFF92D4)
val secondaryLight = Color(0xFF884A70)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFFFFB2DD)
val onSecondaryContainerLight = Color(0xFF7C4065)
val tertiaryLight = Color(0xFF690013)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFF8F1022)
val onTertiaryContainerLight = Color(0xFFFF9A99)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF93000A)
val backgroundLight = Color(0xFFFFF8F8)
val onBackgroundLight = Color(0xFF23191E)
val surfaceLight = Color(0xFFFFF8F8)
val onSurfaceLight = Color(0xFF23191E)
val surfaceVariantLight = Color(0xFFF7DBE8)
val onSurfaceVariantLight = Color(0xFF54414B)
val outlineLight = Color(0xFF87717C)
val outlineVariantLight = Color(0xFFDAC0CB)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF392D33)
val inverseOnSurfaceLight = Color(0xFFFFECF3)
val inversePrimaryLight = Color(0xFFFFAEDC)
val surfaceDimLight = Color(0xFFE8D5DD)
val surfaceBrightLight = Color(0xFFFFF8F8)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFFFF0F5)
val surfaceContainerLight = Color(0xFFFDE9F1)
val surfaceContainerHighLight = Color(0xFFF7E3EB)
val surfaceContainerHighestLight = Color(0xFFF1DDE5)

val primaryLightMediumContrast = Color(0xFF610049)
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFF880368)
val onPrimaryContainerLightMediumContrast = Color(0xFFFFD5EA)
val secondaryLightMediumContrast = Color(0xFF592246)
val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(0xFF98587F)
val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(0xFF690013)
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFF8F1022)
val onTertiaryContainerLightMediumContrast = Color(0xFFFFD8D6)
val errorLightMediumContrast = Color(0xFF740006)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFCF2C27)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFFFF8F8)
val onBackgroundLightMediumContrast = Color(0xFF23191E)
val surfaceLightMediumContrast = Color(0xFFFFF8F8)
val onSurfaceLightMediumContrast = Color(0xFF180E14)
val surfaceVariantLightMediumContrast = Color(0xFFF7DBE8)
val onSurfaceVariantLightMediumContrast = Color(0xFF43313A)
val outlineLightMediumContrast = Color(0xFF614D57)
val outlineVariantLightMediumContrast = Color(0xFF7D6772)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF392D33)
val inverseOnSurfaceLightMediumContrast = Color(0xFFFFECF3)
val inversePrimaryLightMediumContrast = Color(0xFFFFAEDC)
val surfaceDimLightMediumContrast = Color(0xFFD4C2C9)
val surfaceBrightLightMediumContrast = Color(0xFFFFF8F8)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0F5)
val surfaceContainerLightMediumContrast = Color(0xFFF7E3EB)
val surfaceContainerHighLightMediumContrast = Color(0xFFEBD8E0)
val surfaceContainerHighestLightMediumContrast = Color(0xFFE0CDD4)

val primaryLightHighContrast = Color(0xFF590043)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF880368)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF4D183B)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF6F355A)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF600010)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF8F1022)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF600004)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF98000A)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFFFF8F8)
val onBackgroundLightHighContrast = Color(0xFF23191E)
val surfaceLightHighContrast = Color(0xFFFFF8F8)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFF7DBE8)
val onSurfaceVariantLightHighContrast = Color(0xFF000000)
val outlineLightHighContrast = Color(0xFF382730)
val outlineVariantLightHighContrast = Color(0xFF57444E)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF392D33)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFFFAEDC)
val surfaceDimLightHighContrast = Color(0xFFC6B4BC)
val surfaceBrightLightHighContrast = Color(0xFFFFF8F8)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFFFECF3)
val surfaceContainerLightHighContrast = Color(0xFFF1DDE5)
val surfaceContainerHighLightHighContrast = Color(0xFFE2CFD7)
val surfaceContainerHighestLightHighContrast = Color(0xFFD4C2C9)

val primaryDark = Color(0xFFFFAEDC)
val onPrimaryDark = Color(0xFF600049)
val primaryContainerDark = Color(0xFF880368)
val onPrimaryContainerDark = Color(0xFFFF92D4)
val secondaryDark = Color(0xFFFCB0DB)
val onSecondaryDark = Color(0xFF521C40)
val secondaryContainerDark = Color(0xFF6F3559)
val onSecondaryContainerDark = Color(0xFFEDA2CC)
val tertiaryDark = Color(0xFFFFB3B2)
val onTertiaryDark = Color(0xFF680012)
val tertiaryContainerDark = Color(0xFF8F1022)
val onTertiaryContainerDark = Color(0xFFFF9A99)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF1A1016)
val onBackgroundDark = Color(0xFFF1DDE5)
val surfaceDark = Color(0xFF1A1016)
val onSurfaceDark = Color(0xFFF1DDE5)
val surfaceVariantDark = Color(0xFF54414B)
val onSurfaceVariantDark = Color(0xFFDAC0CB)
val outlineDark = Color(0xFFA28A96)
val outlineVariantDark = Color(0xFF54414B)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFF1DDE5)
val inverseOnSurfaceDark = Color(0xFF392D33)
val inversePrimaryDark = Color(0xFFA62881)
val surfaceDimDark = Color(0xFF1A1016)
val surfaceBrightDark = Color(0xFF42363C)
val surfaceContainerLowestDark = Color(0xFF150B11)
val surfaceContainerLowDark = Color(0xFF23191E)
val surfaceContainerDark = Color(0xFF271D22)
val surfaceContainerHighDark = Color(0xFF32272D)
val surfaceContainerHighestDark = Color(0xFF3D3137)

val primaryDarkMediumContrast = Color(0xFFFFCFE7)
val onPrimaryDarkMediumContrast = Color(0xFF4D003A)
val primaryContainerDarkMediumContrast = Color(0xFFE55EB7)
val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
val secondaryDarkMediumContrast = Color(0xFFFFCFE7)
val onSecondaryDarkMediumContrast = Color(0xFF451134)
val secondaryContainerDarkMediumContrast = Color(0xFFC17BA3)
val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
val tertiaryDarkMediumContrast = Color(0xFFFFD2D0)
val onTertiaryDarkMediumContrast = Color(0xFF54000D)
val tertiaryContainerDarkMediumContrast = Color(0xFFF45E64)
val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
val errorDarkMediumContrast = Color(0xFFFFD2CC)
val onErrorDarkMediumContrast = Color(0xFF540003)
val errorContainerDarkMediumContrast = Color(0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF1A1016)
val onBackgroundDarkMediumContrast = Color(0xFFF1DDE5)
val surfaceDarkMediumContrast = Color(0xFF1A1016)
val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkMediumContrast = Color(0xFF54414B)
val onSurfaceVariantDarkMediumContrast = Color(0xFFF0D5E1)
val outlineDarkMediumContrast = Color(0xFFC4ABB7)
val outlineVariantDarkMediumContrast = Color(0xFFA18A95)
val scrimDarkMediumContrast = Color(0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(0xFFF1DDE5)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF32272D)
val inversePrimaryDarkMediumContrast = Color(0xFF890569)
val surfaceDimDarkMediumContrast = Color(0xFF1A1016)
val surfaceBrightDarkMediumContrast = Color(0xFF4E4147)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0509)
val surfaceContainerLowDarkMediumContrast = Color(0xFF251B20)
val surfaceContainerDarkMediumContrast = Color(0xFF30252A)
val surfaceContainerHighDarkMediumContrast = Color(0xFF3B2F35)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF473A40)

val primaryDarkHighContrast = Color(0xFFFFEBF3)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFFFFA8DA)
val onPrimaryContainerDarkHighContrast = Color(0xFF1F0015)
val secondaryDarkHighContrast = Color(0xFFFFEBF3)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFFF8ACD7)
val onSecondaryContainerDarkHighContrast = Color(0xFF1F0015)
val tertiaryDarkHighContrast = Color(0xFFFFECEB)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFFFADAC)
val onTertiaryContainerDarkHighContrast = Color(0xFF220002)
val errorDarkHighContrast = Color(0xFFFFECE9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
val onErrorContainerDarkHighContrast = Color(0xFF220001)
val backgroundDarkHighContrast = Color(0xFF1A1016)
val onBackgroundDarkHighContrast = Color(0xFFF1DDE5)
val surfaceDarkHighContrast = Color(0xFF1A1016)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF54414B)
val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
val outlineDarkHighContrast = Color(0xFFFFEBF3)
val outlineVariantDarkHighContrast = Color(0xFFD6BCC8)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFF1DDE5)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF890569)
val surfaceDimDarkHighContrast = Color(0xFF1A1016)
val surfaceBrightDarkHighContrast = Color(0xFF5A4C53)
val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
val surfaceContainerLowDarkHighContrast = Color(0xFF271D22)
val surfaceContainerDarkHighContrast = Color(0xFF392D33)
val surfaceContainerHighDarkHighContrast = Color(0xFF44383E)
val surfaceContainerHighestDarkHighContrast = Color(0xFF504349)
